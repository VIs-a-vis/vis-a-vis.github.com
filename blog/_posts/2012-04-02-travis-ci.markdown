---
layout: post
title: Travis CI
tags: [разработка, сервисы]
---

Доброго времени суток, мои юные кодеры. Все мы знаем, что тесты это хорошо, а автоматические еще лучше. По научному это называется Continuous Integration, т.е. [непрерывная интеграция](http://ru.wikipedia.org/wiki/Непрерывная_интеграция). Обычно для этого на серверах поднимают всякие Phing, Hudson и прочие страшные штуки. Но это все напряжно, требует кучи телодвижений и самое главное своего сервера. Мы юзаем GitHub и нам всего лишь нужно, чтобы перед каждым пушем прогонялись тесты. Конечно можно делать это вручную, но благодаря респектозным парням из [travic-ci.org](http://travis-ci.org), все можно делать автоматически и бесплатно. Наверняка вы видели в описании README некоторых проектов на GitHub, прикольную картинку с надписью "passing" на зеленом фоне или "failing" на красном. Я тоже видел, но думал, что это все сложно и для избранных. Но после какого-то выпуска [Ruby NoName Poscast'а](http://ruby.rpod.ru "Питонеры, сделайте блин тоже свой подкаст"), где говорилось про Travis CI, решил его попробовать. Сразу нагуглилась статья [Что такое travis-ci.org и с чем его едят?](http://rezvanov.info/posts/chto-takoe-travis-ciorg-i-s-chem-ego-edyat) и понеслась.

На сайте проекта отличная документация, так что все должно быть понятно. Просто логинимся с помощью GitHub и попадаем на страницу своего профиля, где видим опцию выбора языка (среди которых есть русский) и список своих репозиториев. Стоит отметить, что я юзал сервис через Оперу и в ней репы не отображались. Я уже подумал "какой дурацкий сервис" и хотел уйти, но решил на всякий пожарный проверить в Хроме. И о, чудо, Оперу приравняли к IE. Вообщем в Хроме все было нормально. Дальше просто отмечаем репозиторий который хотим тестировать и идем на GitHub в его настройки. В пункте Service Hooks выбираем Travis и наблюдаем, что поля уже заполнены. Если у вас почему-то нет, то просто заполняем вручную из данных профиля на сайте Travis CI. Далее создаем в корне проекта файл .travis.yml и заполняем согласно документации. Затем пушим его в репозиторий. Теперь при каждом пуше, Travis CI будет выполнять ваши тесты. Чтобы добавить красивую картинку в README, читаем [это](http://about.travis-ci.org/docs/user/status-images/).

Вот и все. Ничего сложного, зато ЧСВ после этого зашкаливает :).

P.S. А вот и [проект](https://github.com/VIs-a-vis/Tabouret "Аццкий велик") для которого я юзал Travis CI. Да, это еще один никому не нужный PHP фреймворк. Основное сомнительное отличие от подобных в том, что контроллеры являются просто файлами с функциями (экшены). Ну и роутинг там как в Django :).
